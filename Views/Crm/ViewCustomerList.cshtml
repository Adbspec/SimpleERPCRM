<!-- start page title -->
@using ERP.Dto;
@model IEnumerable<ERP.Models.Customer>

@{
    CustomerDTO customer = new CustomerDTO();
}
<link href="~/css/vendor/dataTables.bootstrap5.css" rel="stylesheet" type="text/css">
<link href="~/css/vendor/responsive.bootstrap5.css" rel="stylesheet" type="text/css">
<div class="row">
    <div class="col-12">
        <div class="page-title-box">

            <h4 class="page-title">Customers</h4>
        </div>
    </div>
</div>
<!-- end page title -->

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="row mb-2">
                    <div class="col-sm-4">
                        <a href="javascript:void(0);" class="btn btn-danger mb-2" data-bs-toggle="modal" data-bs-target="#addCustomerModal">
                            <i class="mdi mdi-plus-circle me-2"></i> Add Customers
                        </a>
                    </div>
                   
                </div>

                <div class="table-responsive">
                    <table class="table table-centered table-striped dt-responsive nowrap w-100" id="customer-datatable">
                        <thead>
                            <tr>

                                <th>Customer Name</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Address</th>
                                <th>Added Date</th>
                                <th style="width: 75px;">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Count() > 0)
                            {
                                @foreach (var customerData in Model)
                                {
                                    <tr>

                                        <td>
                                            <a asp-action="ViewCustomer" asp-controller="Crm" asp-route-CustomerId="@customerData.CustomerId" class="fw-semibold text-bold text-primary">@(customerData.FirstName) @(customerData.LastName)</a>
                                        </td>
                                        <td>
                                            @(customerData.Email)
                                        </td>
                                        <td>
                                            @(customerData.Phone)
                                        </td>
                                        <td>
                                            @(customerData.Address)
                                        </td>
                                        <td>
                                            @(customerData.CreatedAt.Value.ToString("d"))
                                        </td>


                                        <td>
                                            <a href="javascript:void(0);" class="action-icon" data-bs-toggle="modal" data-bs-target="#editCustomerModal" data-id="@customerData.CustomerId" data-firstname="@customerData.FirstName" data-lastname="@customerData.LastName" data-email="@customerData.Email" data-phone="@customerData.Phone" data-address="@customerData.Address">
                                                <i class="mdi mdi-square-edit-outline"></i>
                                            </a>
                                            <a href="javascript:void(0);" class="action-icon delete-button" data-id="@customerData.CustomerId">
                                                <i class="mdi mdi-delete"></i>
                                            </a>

                                        </td>

                                    </tr>
                                }

                            }

                        </tbody>
                    </table>
                </div>
            </div> <!-- end card-body-->
        </div> <!-- end card-->
    </div> <!-- end col -->
</div>

<!-- Add Customer Modal -->
<div class="modal fade" id="addCustomerModal" tabindex="-1" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCustomerModalLabel">Add Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form inside modal -->
                <form asp-controller="Crm" asp-action="AddCustomerInfo" method="post" id="customerForm">
                    @{
                        await Html.RenderPartialAsync("_CustomerFormPartial", customer);
                    }
                    <button type="button" class="mt-2 btn btn-primary" id="saveButton">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Customer Modal -->
<div class="modal fade" id="editCustomerModal" tabindex="-1" aria-labelledby="editCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCustomerModalLabel">Edit Customer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form inside modal -->
                <form asp-controller="Crm" asp-action="UpdateCustomerInfo" method="post" id="editCustomerForm">

                    <input type="hidden" id="editCustomerId" name="CustomerId" />
                    <div class="mb-3">
                        <label for="editFirstName" class="form-label">First Name</label>
                        <input type="text" class="form-control" id="editFirstName" name="FirstName" />
                    </div>
                    <div class="mb-3">
                        <label for="editLastName" class="form-label">Last Name</label>
                        <input type="text" class="form-control" id="editLastName" name="LastName" />
                    </div>
                    <div class="mb-3">
                        <label for="editEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="editEmail" name="Email" />
                    </div>
                    <div class="mb-3">
                        <label for="editPhone" class="form-label">Phone</label>
                        <input type="text" class="form-control" id="editPhone" name="Phone" />
                    </div>
                    <div class="mb-3">
                        <label for="editAddress" class="form-label">Address</label>
                        <textarea class="form-control" id="editAddress" name="Address"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary" id="saveEditButton">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this customer?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script src="~/js/vendor/jquery.dataTables.min.js"></script>
    <script src="~/js/vendor/dataTables.bootstrap5.js"></script>
    <script src="~/js/vendor/dataTables.responsive.min.js"></script>
    <script src="~/js/vendor/responsive.bootstrap5.min.js"></script>
    <script src="~/js/vendor/dataTables.checkboxes.min.js"></script>
   
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
    <script>
                $(document).ready(function () {
            "use strict";
            $("#customer-datatable").DataTable({
                language: {
                    paginate: {
                        previous: "<i class='mdi mdi-chevron-left'>",
                        next: "<i class='mdi mdi-chevron-right'>"
                    },
                    info: "Showing customers _START_ to _END_ of _TOTAL_",
                    lengthMenu: 'Display <select class=\'form-select form-select-sm ms-1 me-1\'><option value="10">10</option><option value="20">20</option><option value="-1">All</option></select> customers'
                },
                pageLength: 10,

                drawCallback: function () {
                    $(".dataTables_paginate > .pagination").addClass("pagination-rounded"), $("#products-datatable_length label").addClass("form-label")
                }
            })
        });
    </script>
    <script>
        $(document).ready(function () {
            // Enable client-side validation
            $("form").validate({
                errorClass: "text-danger",
                highlight: function (element) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element) {
                    $(element).removeClass('is-invalid');
                }
            });

            // Enable unobtrusive validation
            $.validator.unobtrusive.parse('form');

            // Handle form submission with AJAX
                  $("#saveButton").on("click", function (event) {
            event.preventDefault();

            // Validate the form
            if ($("#customerForm").valid()) {
                // Disable the Save button and show the spinner
                var $saveButton = $("#saveButton");
                $saveButton.prop("disabled", true); // Disable the Save button
                $saveButton.html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...'); // Show spinner

                // Clear previous error messages
                $("#errorMessage").remove();

                // Submit form using Ajax
                $.ajax({
                    url: $("#customerForm").attr("action"),
                    type: $("#customerForm").attr("method"),
                    data: $("#customerForm").serialize(),
                    success: function (response) {
                        // Check if the server response indicates success
                        if (response.success) {
                            // Reload the page to reflect the newly added customer
                            window.location.reload();
                        } else {
                            // Show error message
                            $("#saveButton").after('<div id="errorMessage" class="alert alert-danger mt-2">An error occurred: ' + response.message + '</div>');
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle AJAX errors
                        $("#saveButton").after('<div id="errorMessage" class="alert alert-danger mt-2">An error occurred while saving customer.</div>');
                    },
                    complete: function () {
                        // Enable the Save button again and remove the spinner
                        $saveButton.prop("disabled", false); // Enable the Save button
                        $saveButton.html('Save Customer'); // Restore button text
                    }
                });
            }
        });

        });


         $("a[data-bs-target='#editCustomerModal']").on("click", function () {
            // Retrieve customer data from the clicked row
            var customerId = $(this).data("id");
            var firstName = $(this).data("firstname");
            var lastName = $(this).data("lastname");
            var email = $(this).data("email");
            var phone = $(this).data("phone");
            var address = $(this).data("address");

            // Fill the form with the data
            $("#editCustomerId").val(customerId);
            $("#editFirstName").val(firstName);
            $("#editLastName").val(lastName);
            $("#editEmail").val(email);
            $("#editPhone").val(phone);
            $("#editAddress").val(address);
        });

               // Handle form submission for editing the customer
        $("#editCustomerForm").on("submit", function (event) {
            event.preventDefault();

            // Disable the Save button and show the spinner
            var $saveButton = $("#saveEditButton");
            $saveButton.prop("disabled", true); // Disable the Save button
            $saveButton.html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...'); // Show spinner

            // Clear previous error messages
            $("#errorMessage").remove();

            // Submit the form using Ajax
            $.ajax({
                url: $(this).attr("action"),
                type: "POST",
                data: $(this).serialize(),
                success: function (response) {
                    // Check if the server response indicates success
                    if (response.success) {
                        // Reload the page to reflect updated customer details
                        window.location.reload();
                    } else {
                        // Show error message
                        $("#saveEditButton").after('<div id="errorMessage" class="alert alert-danger mt-2">An error occurred: ' + response.message + '</div>');
                    }
                },
                error: function (xhr, status, error) {
                    // Handle AJAX errors
                    $("#saveEditButton").after('<div id="errorMessage" class="alert alert-danger mt-2">An error occurred while saving customer.</div>');
                },
                complete: function () {
                    // Enable the Save button again and remove the spinner
                    $saveButton.prop("disabled", false); // Enable the Save button
                    $saveButton.html('Save Changes'); // Restore button text
                }
            });
        });



        let deleteCustomerId = null;

        // Show delete confirmation modal
        $(document).on("click", ".delete-button", function () {
            deleteCustomerId = $(this).data("id"); // Get customer ID
            $('#deleteConfirmationModal').modal('show');
        });

        // Handle delete confirmation
               $("#confirmDeleteButton").on("click", function () {
            if (deleteCustomerId) {
                // Disable the delete button and show spinner
                const $deleteButton = $("#confirmDeleteButton");
                $deleteButton.prop("disabled", true);
                $deleteButton.html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...');

                // AJAX call to delete the customer
                $.ajax({
                    url: "@Url.Action("DeleteCustomer", "Crm")",
                    type: "POST",
                    data: { CustomerId: deleteCustomerId },
                    success: function (response) {
                        if (response.success) {
                            // Reload the page to reflect the changes
                            window.location.reload();
                        } else {
                            alert(response.message || "Failed to delete the customer.");
                        }
                    },
                    error: function () {
                        alert("An error occurred while deleting the customer.");
                    },
                    complete: function () {
                        // Reset the delete button state
                        $deleteButton.prop("disabled", false);
                        $deleteButton.html("Delete");
                    }
                });
            }
        });

    </script>
}
